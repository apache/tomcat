<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.w3.org/2001/XMLSchema"
            targetNamespace="https://jakarta.ee/xml/ns/jakartaee"
            xmlns:jakartaee="https://jakarta.ee/xml/ns/jakartaee"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            version="2.0">
  <xsd:annotation>
    <xsd:documentation>

      Copyright (c) 2009, 2020 Oracle and/or its affiliates. All rights reserved.

      This program and the accompanying materials are made available under the
      terms of the Eclipse Public License v. 2.0, which is available at
      http://www.eclipse.org/legal/epl-2.0.

      This Source Code may also be made available under the following Secondary
      Licenses when the conditions for such availability set forth in the
      Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
      version 2 with the GNU Classpath Exception, which is available at
      https://www.gnu.org/software/classpath/license.html.

      SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

    </xsd:documentation>
  </xsd:annotation>

  <xsd:annotation>
    <xsd:documentation>

      (C) Copyright International Business Machines Corporation 2002

    </xsd:documentation>
  </xsd:annotation>


<!-- **************************************************** -->

  <xsd:complexType name="service-refType">
    <xsd:annotation>
      <xsd:documentation>

        The service-ref element declares a reference to a Web
        service. It contains optional description, display name and
        icons, a declaration of the required Service interface,
        an optional WSDL document location, an optional set
        of Jakarta XML RPC mappings, an optional QName for the service element,
        an optional set of Service Endpoint Interfaces to be resolved
        by the container to a WSDL port, and an optional set of handlers.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="jakartaee:descriptionGroup"/>
      <xsd:element name="service-ref-name"
                   type="jakartaee:jndi-nameType">
        <xsd:annotation>
          <xsd:documentation>

            The service-ref-name element declares logical name that the
            components in the module use to look up the Web service. It
            is recommended that all service reference names start with
            "service/".

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="service-interface"
                   type="jakartaee:fully-qualified-classType">
        <xsd:annotation>
          <xsd:documentation>

            The service-interface element declares the fully qualified class
            name of the Jakarta XML RPC Service interface the client depends on.
            In most cases the value will be jakarta.xml.rpc.Service.  A Jakarta XML
            RPC generated Service Interface class may also be specified.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="service-ref-type"
                   type="jakartaee:fully-qualified-classType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            The service-ref-type element declares the type of the service-ref
            element that is injected or returned when a JNDI lookup is done.
            This must be either a fully qualified name of Service class or
            the fully qualified name of service endpoint interface class.
            This is only used with Jakarta XML Web Services runtime where
            the corresponding @WebServiceRef annotation can be used to denote both
            a Service or a Port.

            If this is not specified, then the type of service-ref element
            that is injected or returned when a JNDI lookup is done is
            always a Service interface/class.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="wsdl-file"
                   type="jakartaee:xsdAnyURIType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            The wsdl-file element contains the URI location of a WSDL
            file. The location is relative to the root of the module.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="jaxrpc-mapping-file"
                   type="jakartaee:pathType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            The jaxrpc-mapping-file element contains the name of a file that
            describes the Jakarta XML RPC mapping between the Java interaces used by
            the application and the WSDL description in the wsdl-file.  The
            file name is a relative path within the module file.

            This is not required when Jakarta Enterprise Web Services based
            runtime is used.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="service-qname"
                   type="jakartaee:xsdQNameType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            The service-qname element declares the specific WSDL service
            element that is being refered to.  It is not specified if no
            wsdl-file is declared.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="port-component-ref"
                   type="jakartaee:port-component-refType"
                   minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>

            The port-component-ref element declares a client dependency
            on the container for resolving a Service Endpoint Interface
            to a WSDL port. It optionally associates the Service Endpoint
            Interface with a particular port-component. This is only used
            by the container for a Service.getPort(Class) method call.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="handler"
                     type="jakartaee:handlerType"
                     minOccurs="0"
                     maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>

                  Declares the handler for a port-component. Handlers can
                  access the init-param name/value pairs using the
                  HandlerInfo interface. If port-name is not specified, the
                  handler is assumed to be associated with all ports of the
                  service.

                  To be used with Jakarta XML RPC based runtime only.

            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="handler-chains"
                     type="jakartaee:handler-chainsType"
                     minOccurs="0"
                     maxOccurs="1">
          <xsd:annotation>
            <xsd:documentation>

                   To be used with Jakarta XML Web Services based runtime only.

            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
      <xsd:group ref="jakartaee:resourceGroup"/>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:ID"/>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="port-component-refType">
    <xsd:annotation>
      <xsd:documentation>

        The port-component-ref element declares a client dependency
        on the container for resolving a Service Endpoint Interface
        to a WSDL port. It optionally associates the Service Endpoint
        Interface with a particular port-component. This is only used
        by the container for a Service.getPort(Class) method call.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="service-endpoint-interface"
                   type="jakartaee:fully-qualified-classType">
        <xsd:annotation>
          <xsd:documentation>

            The service-endpoint-interface element defines a fully qualified
            Java class that represents the Service Endpoint Interface of a
            WSDL port.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="enable-mtom"
                   type="jakartaee:true-falseType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            Used to enable or disable SOAP MTOM/XOP mechanism on the client
            side for a port-component.

            Not to be specified for Jakarta XML RPC runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mtom-threshold"
                   type="jakartaee:xsdNonNegativeIntegerType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            When MTOM is enabled, binary data above this size in bytes
            should be XOP encoded or sent as attachment. Default value is 0.

            Not to be specified for Jakarta XML RPC runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="addressing"
                   type="jakartaee:addressingType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            This specifies the WS-Addressing requirements for a Jakarta XML
            web service. It corresponds to jakarta.xml.ws.soap.Addressing
            annotation or its feature jakarta.xml.ws.soap.AddressingFeature.

            See the addressingType for more information.

            Not to be specified for Jakarta XML RPC runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="respect-binding"
                   type="jakartaee:respect-bindingType"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            Corresponds to the jakarta.xml.ws.RespectBinding annotation
            or its corresponding jakarta.xml.ws.RespectBindingFeature web
            service feature. This is used to control whether a Jakarta XML Web
            Services implementation must respect/honor the contents of the
            wsdl:binding in the WSDL that is associated with the service.

            Not to be specified for Jakarta XML RPC runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="port-component-link"
                   type="jakartaee:string"
                   minOccurs="0"
                   maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>

            The port-component-link element links a port-component-ref
            to a specific port-component required to be made available
            by a service reference.

            The value of a port-component-link must be the
            port-component-name of a port-component in the same module
            or another module in the same application unit. The syntax
            for specification follows the syntax defined for ejb-link
            in the EJB 2.0 specification.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:ID"/>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="handler-chainsType">
    <xsd:annotation>
      <xsd:documentation>

        The handler-chains element defines the handlerchains associated with this
        service or service endpoint.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="handler-chain"
                   type="jakartaee:handler-chainType"
                   minOccurs="0"
                   maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:ID"/>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="handler-chainType">
    <xsd:annotation>
      <xsd:documentation>

        The handler-chain element defines the handlerchain.
        Handlerchain can be defined such that the handlers in the
        handlerchain operate,all ports of a service, on a specific
        port or on a list of protocol-bindings. The choice of elements
        service-name-pattern, port-name-pattern and protocol-bindings
        are used to specify whether the handlers in handler-chain are
        for a service, port or protocol binding. If none of these
        choices are specified with the handler-chain element then the
        handlers specified in the handler-chain will be applied on
        everything.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice minOccurs="0"
                  maxOccurs="1">
        <xsd:element name="service-name-pattern"
                     type="jakartaee:qname-pattern"/>
        <xsd:element name="port-name-pattern"
                     type="jakartaee:qname-pattern"/>
        <xsd:element name="protocol-bindings"
                     type="jakartaee:protocol-bindingListType"/>
      </xsd:choice>
      <xsd:element name="handler"
                   type="jakartaee:handlerType"
                   minOccurs="1"
                   maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:ID"/>
  </xsd:complexType>

  <xsd:simpleType name="protocol-bindingListType">
    <xsd:annotation>
      <xsd:documentation>

        Defines the type used for specifying a list of
        protocol-bindingType(s). For e.g.

        ##SOAP11_HTTP ##SOAP12_HTTP ##XML_HTTP

      </xsd:documentation>
    </xsd:annotation>
    <xsd:list itemType="jakartaee:protocol-bindingType"/>
  </xsd:simpleType>

  <xsd:simpleType name="protocol-bindingType">
    <xsd:annotation>
      <xsd:documentation>

        Defines the type used for specifying the URI for the
        protocol binding used by the port-component.  For
        portability one could use one of the following tokens that
        alias the standard binding types:

        ##SOAP11_HTTP
        ##SOAP11_HTTP_MTOM
        ##SOAP12_HTTP
        ##SOAP12_HTTP_MTOM
        ##XML_HTTP

        Other specifications could define tokens that start with ##
        to alias new standard binding URIs that are introduced.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:union memberTypes="xsd:anyURI jakartaee:protocol-URIAliasType"/>
  </xsd:simpleType>

  <xsd:simpleType name="protocol-URIAliasType">
    <xsd:annotation>
      <xsd:documentation>

        Defines the type that is used for specifying tokens that
        start with ## which are used to alias existing standard
        protocol bindings and support aliases for new standard
        binding URIs that are introduced in future specifications.

        The following tokens alias the standard protocol binding
        URIs:

        ##SOAP11_HTTP = "http://schemas.xmlsoap.org/wsdl/soap/http"
        ##SOAP11_HTTP_MTOM =
        "http://schemas.xmlsoap.org/wsdl/soap/http?mtom=true"
        ##SOAP12_HTTP = "http://www.w3.org/2003/05/soap/bindings/HTTP/"
        ##SOAP12_HTTP_MTOM =
        "http://www.w3.org/2003/05/soap/bindings/HTTP/?mtom=true"
        ##XML_HTTP = "http://www.w3.org/2004/08/wsdl/http"

      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:pattern value="##.+"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="qname-pattern">
    <xsd:annotation>
      <xsd:documentation>

        This is used to specify the QName pattern in the
        attribute service-name-pattern and port-name-pattern in
        the handler-chain element

        For example, the various forms acceptable here for
        service-name-pattern attribute in handler-chain element
        are :

        Exact Name: service-name-pattern="ns1:EchoService"

             In this case, handlers specified in this
             handler-chain element will apply to all ports with
             this exact service name. The namespace prefix must
             have been declared in a namespace declaration
             attribute in either the start-tag of the element
             where the prefix is used or in an an ancestor
             element (i.e. an element in whose content the
             prefixed markup occurs)


        Pattern : service-name-pattern="ns1:EchoService*"

             In this case, handlers specified in this
             handler-chain element will apply to all ports whose
             Service names are like EchoService1, EchoServiceFoo
             etc. The namespace prefix must have been declared in
             a namespace declaration attribute in either the
             start-tag of the element where the prefix is used or
             in an an ancestor element (i.e. an element in whose
             content the prefixed markup occurs)

        Wild Card : service-name-pattern="*"

            In this case, handlers specified in this handler-chain
            element will apply to ports of all service names.

        The same can be applied to port-name attribute in
        handler-chain element.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:pattern value="\*|([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*\*?"/>
    </xsd:restriction>
  </xsd:simpleType>


<!-- **************************************************** -->

  <xsd:complexType name="addressingType">
    <xsd:annotation>
      <xsd:documentation>

        This specifies the WS-Addressing requirements for a Jakarta XML web
        service. It corresponds to jakarta.xml.ws.soap.Addressing annotation or its
        feature jakarta.xml.ws.soap.AddressingFeature.

        If the "enabled" element is "true", WS-Addressing is enabled.
        It means that the endpoint supports WS-Addressing but does not require
        its use. The default value for "enabled" is "true".

        If the WS-Addressing is enabled and the "required" element is "true",
        it means that the endpoint requires WS-Addressing. The default value
        for "required" is "false".

        If WS-Addressing is enabled, the "responses" element determines
        if an endpoint requires the use of only anonymous responses,
        or only non-anonymous responses, or all. The value of the "responses"
        element must be one of the following:

        ANONYMOUS
        NON_ANONYMOUS
        ALL

        The default value for the "responses" is ALL.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="enabled"
                   type="jakartaee:true-falseType"
                   minOccurs="0"
                   maxOccurs="1"/>
      <xsd:element name="required"
                   type="jakartaee:true-falseType"
                   minOccurs="0"
                   maxOccurs="1"/>
      <xsd:element name="responses"
                   type="jakartaee:addressing-responsesType"
                   minOccurs="0"
                   maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="addressing-responsesType">
    <xsd:annotation>
      <xsd:documentation>

        If WS-Addressing is enabled, this type determines if an endpoint
        requires the use of only anonymous responses, or only non-anonymous
        responses, or all.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:restriction base="jakartaee:string">
        <xsd:enumeration value="ANONYMOUS"/>
        <xsd:enumeration value="NON_ANONYMOUS"/>
        <xsd:enumeration value="ALL"/>
      </xsd:restriction>
    </xsd:simpleContent>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="respect-bindingType">
    <xsd:annotation>
      <xsd:documentation>

        Corresponds to the jakarta.xml.ws.RespectBinding annotation
        or its corresponding jakarta.xml.ws.RespectBindingFeature web
        service feature. This is used to control whether a Jakarta XML
        Web Services implementation must respect/honor the contents of the
        wsdl:binding in the WSDL that is associated with the service.

        If the "enabled" element is "true", wsdl:binding in the
        associated WSDL, if any, must be respected/honored.

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="enabled"
                   type="jakartaee:true-falseType"
                   minOccurs="0"
                   maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>


<!-- **************************************************** -->

  <xsd:complexType name="handlerType">
    <xsd:annotation>
      <xsd:documentation>

        Declares the handler for a port-component, service-ref. Handlers can
        access the init-param name/value pairs using the HandlerInfo interface.

        Used in: port-component, service-ref

      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="jakartaee:descriptionGroup"/>
      <xsd:element name="handler-name"
                   type="jakartaee:string">
        <xsd:annotation>
          <xsd:documentation>

            Defines the name of the handler. The name must be unique within the
            module.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="handler-class"
                   type="jakartaee:fully-qualified-classType">
        <xsd:annotation>
          <xsd:documentation>

            Defines a fully qualified class name for the handler implementation.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="init-param"
                   type="jakartaee:param-valueType"
                   minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>

            Not to be specified for Jakarta XML Web Services runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="soap-header"
                   type="jakartaee:xsdQNameType"
                   minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>

            Defines the QName of a SOAP header that will be processed by the
            handler.

            Not to be specified for Jakarta XML Web Services runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="soap-role"
                   type="jakartaee:string"
                   minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>

            The soap-role element contains a SOAP actor definition that the
            Handler will play as a role.

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="port-name"
                   type="jakartaee:string"
                   minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>

            The port-name element defines the WSDL port-name that a
            handler should be associated with. If port-name is not
            specified, the handler is assumed to be associated with
            all ports of the service.

            Not to be specified for Jakarta XML Web Services runtime

          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id"
                   type="xsd:ID"/>
  </xsd:complexType>

  <xsd:group name="service-refGroup">
    <xsd:sequence>
      <xsd:element name="service-ref"
                   type="jakartaee:service-refType"
                   minOccurs="0"
                   maxOccurs="unbounded">
        <xsd:key name="service-ref_handler-name-key">
          <xsd:annotation>
            <xsd:documentation>

              Defines the name of the handler. The name must be unique
              within the module.

            </xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="jakartaee:handler"/>
          <xsd:field xpath="jakartaee:handler-name"/>
        </xsd:key>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>

</xsd:schema>
