# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Do not edit this file directly.
# To edit translations see: https://tomcat.apache.org/getinvolved.html#Translations

beanNameELResolver.beanReadOnly=El nombre de bean [{0}] es de sólo lectura

elProcessor.defineFunctionInvalidClass=La clase [{0}] no es pública
elProcessor.defineFunctionInvalidMethod=El método [{0}] en la clase [{1}] no es un método estático público
elProcessor.defineFunctionInvalidParameterList=La lista de parámetros [{0}] para el método [{1}] en la clase [{2}] no es válida
elProcessor.defineFunctionInvalidParameterTypeName=El tipo de parámetro [{0}] para el método [{1}] en la clase [{2}] no es válido
elProcessor.defineFunctionNoMethod=No se ha podido encontrar un método estático público [{0}] en la clase [{1}]
elProcessor.defineFunctionNullParams=Uno o varios de los parámetros de entrada era nulo

expressionFactory.cannotCreate=No se ha podido crear un ExpressionFactory de tipo [{0}]
expressionFactory.cannotFind=No se ha podido encontrar un ExpressionFactory de tipo [{0}]
expressionFactory.readFailed=No se ha podido leer [{0}]

importHandler.ambiguousImport=La clase [{0}] no se ha podido importar ya que está en conflicto con [{1}], que ya se ha importado
importHandler.ambiguousStaticImport=No se ha podido procesar la importación estática [{0}] ya que está en conflicto con [{1}] que ya se ha importado
importHandler.classNotFound=No se ha podido importar la clase [{0}], ya que no se ha podido importar
importHandler.invalidClass=La clase [{0}] debe ser pública, estar en un paquete exportado (para Java 9+), ser no abstracta y no ser una interfaz
importHandler.invalidClassName=El nombre de la clase para importar [{0}] debe incluir un paquete
importHandler.invalidClassNameForStatic=La clase [{0}] especificada para la importación estática [{1}] no es válida
importHandler.invalidStaticName=El nombre del campo o método estático para importar [{0}] debe incluir una clase
importHandler.staticNotFound=No se ha podido encontrar la importación estática [{0}] en la clase [{1}] para la importación [{2}]

lambdaExpression.tooFewArgs=Sólo se han proporcionado [{0}] argumentos para una expresión lambda que requiere al menos [{1}]

objectNotAssignable=No se puede añadir un objeto de tipo [{0}] a una matriz de objetos de tipo [{1}]
propertyNotFound=No se ha encontrado la propiedad [{1}] en el tipo [{0}]
propertyNotReadable=La propiedad [{1}] no se puede leer en el tipo [{0}]
propertyNotWritable=La propiedad [{1}] no se puede escribir en el tipo [{0}]
propertyReadError=Error al leer [{1}] en el tipo [{0}]
propertyWriteError=Error al escribir [{1}] en el tipo [{0}]

staticFieldELResolver.methodNotFound=No se ha encontrado ningún método estático público coincidente denominado [{0}] en la clase [{1}]
staticFieldELResolver.notFound=No se ha encontrado ningún campo estático público denominado [{0}] en la clase [{1}] (exportada para Java 9+)
staticFieldELResolver.notWritable=No se permite escribir en campos estáticos (en este caso, el campo [{0}] en la clase [{1}])

util.method.ambiguous=No se ha podido encontrar el método no ambiguo: {0}.{1}({2})
util.method.notfound=No se ha encontrado el método: {0}.{1}({2})
