# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Do not edit this file directly.
# To edit translations see: https://tomcat.apache.org/getinvolved.html#Translations

beanNameELResolver.beanReadOnly=Le nom de bean [{0}] est en lecture seule

elProcessor.defineFunctionInvalidClass=La classe [{0}] n''est pas publique
elProcessor.defineFunctionInvalidMethod=La méthode [{0}] sur la classe [{1}] n''est pas une méthode statique publique
elProcessor.defineFunctionInvalidParameterList=La liste de paramètres [{0}] pour la méthode [{1}] sur la classe [{2}] n''est pas valide
elProcessor.defineFunctionInvalidParameterTypeName=Le type de paramètre [{0}] pour la méthode [{1}] sur la classe [{2}] n''est pas valide
elProcessor.defineFunctionNoMethod=Une méthode statique publique [{0}] sur la classe [{1}] est introuvable
elProcessor.defineFunctionNullParams=Un ou plusieurs des paramètres en entrée avaient une valeur nulle

expressionFactory.cannotCreate=Impossible de créer ExpressionFactory de type [{0}]
expressionFactory.cannotFind=Impossible de trouver ExpressionFactory de type [{0}]
expressionFactory.readFailed=Echec de lecture de [{0}]

importHandler.ambiguousImport=.La classe [{0}] n''a pas pu être importée car elle est en conflit avec [{1}] qui est déjà importé
importHandler.ambiguousStaticImport=L''importation statique [{0}] n''a pas pu être traitée car elle est en conflit avec [{1}] qui est déjà importé
importHandler.classNotFound=La classe [{0}] n''a pas pu être importée car elle est introuvable
importHandler.invalidClass=La classe [{0}] doit être publique, dans un package exporté (pour Java 9+), non abstraite et ne doit pas être une interface
importHandler.invalidClassName=Le nom de la classe à importer [{0}] doit inclure un package
importHandler.invalidClassNameForStatic=La classe [{0}] spécifiée pour l''importation statique [{1}] n''est pas valide
importHandler.invalidStaticName=Le nom de la méthode ou de la zone statique à importer [{0}] doit inclure une classe
importHandler.staticNotFound=L''importation statique [{0}] est introuvable dans la classe [{1}] pour l''importation [{2}]

lambdaExpression.tooFewArgs=Seuls [{0}] arguments ont été fournis pour une expression lambda qui en requiert au moins [{1}]

objectNotAssignable=Impossible d''ajouter un objet de type [{0}] à un tableau d''objets de type [{1}]
propertyNotFound=Propriété [{1}] introuvable sur le type [{0}]
propertyNotReadable=Propriété [{1}] illisible sur le type [{0}]
propertyNotWritable=Propriété [{1}] non inscriptible sur le type [{0}]
propertyReadError=Erreur de lecture de [{1}] sur le type [{0}]
propertyWriteError=Erreur d''écriture de [{1}] sur le type [{0}]
resolverNotWritable=ELResolver ne peut être utilisé en écriture pour le type [{0}]

staticFieldELResolver.methodNotFound=Aucune méthode statique publique nommée [{0}] n''a été détectée sur la classe [{1}]
staticFieldELResolver.notFound=Aucune zone statique publique nommée [{0}] n''a été détectée sur la classe (exportée pour Java 9+) [{1}]
staticFieldELResolver.notWritable=L''écriture dans les zones statiques (dans ce cas la zone [{0}] sur la classe [{1}]) n''est pas autorisée

util.method.ambiguous=Méthode non ambiguë : {0}.{1}({2}) non trouvée
util.method.notfound=Méthode non trouvée : {0}.{1}({2})
