# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Do not edit this file directly.
# To edit translations see: https://tomcat.apache.org/getinvolved.html#Translations

elSupport.coerce.nonAbstract=メソッド [{1}] がabstractではないため、LambdaExpressionをfunctional インターフェイス [{0}] に強制変換できません

error.cannotSetVariables=ファクトリで変数を設定できません
error.compare=[{0}] と [{1}] を比較できません
error.context.null=ELContextがnullでした
error.convert=型 [{1}] の [{0}] を [{2}] に変換できません
error.fnMapper.method=Function[{0}]が見つかりません
error.fnMapper.null=式は関数を使用しますが、FunctionMapperが提供されていません
error.fnMapper.paramcount=関数 [{0}] は [{1}] パラメータを指定していますが、[{2}] が宣言されています
error.function=関数[{0}]の呼び出しで問題が発生しました
error.function.tooManyMethodParameterSets=関数[{0}]に指定されたパラメーターのセットが複数あります
error.identifier.noMethod=識別子[{0}]がnullであり、呼び出すことができませんでした
error.identifier.notMethodExpression=識別子 [{0}] はメソッド式のインスタンスを参照していません。返却された型は [{1}] です
error.identifier.notjava=識別子[{0}]は、EL仕様のセクション1.19で要求されている有効なJava識別子ではありません（識別子::= Java言語識別子）。 このチェックは、システムプロパティorg.apache.el.parser.SKIP_IDENTIFIER_CHECKをtrueに設定することで無効にできます。
error.invalidMethodExpression=有効なメソッド式ではありません[{0}]
error.invoke.tooFewParams=メソッド [{0}] は、少なくとも [{2}] 個のパラメータが必要なときに、[{1}] 個のパラメーターを指定して呼び出されました\n
error.invoke.wrongParams=メソッド [{0}] は、[{2}] 個のパラメータを期待していたときに、[{1}] 個のパラメーターを指定して呼び出されました
error.lambda.tooManyMethodParameterSets=ネストされたラムダ式よりも多くのメソッドパラメーターのセットが指定されています
error.lambda.wrongNestedState=ネストされた状態は一度だけ設定できます
error.method=MethodExpression [{0}] は有効ではありません
error.method.ambiguous=明確なメソッドが見つかりません: {0}.{1}({2})
error.method.notfound=メソッドが見つかりません: {0}.{1}({2})
error.method.nullParms=パラメータタイプはnullにすることができません
error.mixed=式には ''#{...}'' と ''${...}'' の両方を含めることはできません: [{0}]
error.noFunctionMapperTarget=FunctionMapperはnullにすることができません
error.noVariableMapperTarget=VariableMapperはnullにすることができません
error.null=式はnullにすることができません
error.nullLocalName=Functionの名前はnullにすることができません
error.nullMethod=Methodはnullにすることができません
error.parseFail=式 [{0}] の解析に失敗しました
error.resolver.unhandled=ELResolver は プロパティ [{1}] を持つ型 [{0}] を処理しませんでした
error.resolver.unhandled.null=ELResolverは識別子 [{0}] を持つnullベースのオブジェクトを処理することができません
error.syntax.set=Set 操作の構文が無効です
error.unreachable.base=ターゲットに到達できません。識別子[{0}]はnullに解決されました
error.unreachable.property=ターゲットに到達できません。[{0}]はnullを返しました
error.value.expectedType=期待される型をnullにすることはできません
error.value.literal.write=ValueExpressionはリテラルであり、書き込み可能ではありません: [{0}]

stream.compare.notComparable=Stream要素はComparableを実装しなければなりません
stream.optional.empty=空のOptionalでget()を呼び出すことは違法です
stream.optional.paramNotLambda=メソッド [{0}] のパラメータはラムダ式である必要があります
